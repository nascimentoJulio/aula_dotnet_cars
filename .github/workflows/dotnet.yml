name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x' # altere para a versão do .NET que está utilizando

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x' # altere para a versão do .NET que está utilizando

    - name: Restore Dependencies
      run: dotnet restore

    - name: Run Tests
      run: dotnet test --no-build --verbosity normal

  code_quality:
    name: Code Quality Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install .NET global tool - dotnet-sonarscanner
      run: dotnet tool install --global dotnet-sonarscanner --version 6.2.0

    - name: Restore Dependencies
      run: dotnet restore

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Analyze with SonarCloud
      run: dotnet sonarscanner begin /o:"nascimentojulio-1" /k:"nascimentoJulio_aula_dotnet_cars" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" && dotnet build --configuration Release && dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
